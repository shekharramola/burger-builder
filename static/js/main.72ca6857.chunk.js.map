{"version":3,"sources":["components/Burger/Burgeringredient/Burgeringredient.css","components/UI/Input/Input.css","components/Navigation/SideDrawer/SideDrawer.css","components/Burger/BuildControls/BuildControl/BuildControl.css","components/Navigation/Toolbar/Toolbar.css","components/Navigation/NavigationItems/NavigationItem/NavigationItem.css","components/UI/Modal/Modal.css","components/Burger/BuildControls/BuildControls.css","components/UI/Button/Button.css","hoc/Layout/Layout.css","assets/images/burger-logo.png","components/Logo/Logo.css","components/Navigation/NavigationItems/NavigationItems.css","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.css","components/UI/Backdrop/Backdrop.css","components/Burger/Burger.css","components/UI/Spinner/Spinner.css","components/Order/CheckoutSummary/CheckoutSummary.css","containers/Checkout/ContactData/ContactData.css","components/Order/Order.css","containers/Auth/Auth.css","hoc/Aux/Aux.js","components/Logo/Logo.js","components/Navigation/NavigationItems/NavigationItem/NavigationItem.js","components/Navigation/NavigationItems/NavigationItems.js","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.js","components/Navigation/Toolbar/Toolbar.js","components/UI/Backdrop/Backdrop.js","components/UI/Modal/Modal.js","components/Navigation/SideDrawer/SideDrawer.js","hoc/Layout/Layout.js","components/Burger/Burgeringredient/Burgeringredient.js","components/Burger/Burger.js","components/Burger/BuildControls/BuildControl/BuildControl.js","components/Burger/BuildControls/BuildControls.js","components/UI/Button/Button.js","components/Burger/OrderSummary/OrderSummary.js","axios-orders.js","components/UI/Spinner/Spinner.js","hoc/withErrorHandler/withErrorHandler.js","store/actions/order.js","store/actions/auth.js","store/actions/actionTypes.js","containers/BurgerBuilder/BurgerBuilder.js","store/actions/burgerBuilder.js","components/Order/CheckoutSummary/CheckoutSummary.js","components/UI/Input/Input.js","containers/Checkout/ContactData/ContactData.js","containers/Checkout/Checkout.js","components/Order/Order.js","containers/Orders/Orders.js","containers/Auth/Auth.js","App.js","serviceWorker.js","store/utility.js","store/reducers/burgerBuilder.js","store/reducers/order.js","store/reducers/auth.js","index.js"],"names":["module","exports","aux","props","children","logo","className","classes","Logo","style","height","src","burgerLogo","alt","navigationItem","NavigationItem","to","link","activeClassName","active","navigationItems","NavigationItems","drawerToggle","DrawerToggle","onClick","clicked","toolbar","Toolbar","drawerToggleClicked","DesktopOnly","backdrop","show","Backdrop","console","log","Modal","nextProps","nextState","this","shildren","Aux","modalClosed","transform","opacity","Component","sideDrawer","attachClasses","SideDrawer","Close","open","Open","join","Layout","state","showSideDrawer","sideDrawerClosedHandler","setState","prevState","Content","BurgerIngredient","ingredient","type","BreadTop","Seeds1","Seeds2","BreadBottom","Meat","Cheese","Bacon","Salad","protoTypes","PropTypes","string","isRequired","burger","transformedIngredients","Object","keys","ingredients","map","igKey","Array","_","i","key","reduce","arr","el","concat","length","Burger","buildControl","BuildControl","Label","label","Less","removed","disabled","More","added","controls","buildControls","BuildControls","price","toFixed","ctrl","ingredientAdded","ingredientRemoved","OrderButton","purchasable","ordered","button","Button","btnType","OrderSummary","ingredientSummary","textTransform","purchaseCanceled","purchaseContinued","instance","axios","create","baseURL","spinner","Loader","withErrorHandler","WrappedComponent","error","errorConfirmedHandler","reqInterceptor","interceptors","request","use","req","resInterceptor","response","resp","eject","message","checkAuthTimeout","expirationTime","dispatch","setTimeout","BurgerBuilder","purchasing","loading","purchaseHandler","purchaseCancelHandler","purchaseContinueHandler","history","push","onInitIngredients","sum","disabledInfo","ings","orderSummery","onIngredientAdded","onIngredientRemoved","updatePurchasedState","connect","burgerBuilder","totalPrice","ingName","ingredientName","get","then","data","catch","CheckoutSummary","Classes","width","margin","checkoutCancelled","checkoutContinued","input","inputElement","inputClasses","InputElement","invalid","shouldValidate","touched","Invalid","elementType","elementConfig","value","onChange","changed","options","option","displayValue","Input","ContactData","orderForm","name","placeholder","validation","required","valid","email","street","zipCode","minLength","maxLength","country","deliveryMethod","formIsValid","orderHandler","event","preventDefault","formData","formElementIdentifier","order","orderData","onOrderBuger","inputChangedHandler","inputIdentifier","updatedOrderForm","updatedFormElement","target","checkValidity","isFormValid","rules","isValid","trim","formElementArray","id","config","form","onSubmit","formElement","post","orderId","purchaseBurgerSuccess","purchaseBurgerFailed","actions","Checkout","cancelHandler","goBack","continueHandler","replace","onInitPurchase","summary","purchaseRedirect","purchased","path","match","component","amount","ingredientOutput","ig","display","border","padding","Order","Number","parseFloat","Orders","onFetchOrders","orders","token","auth","res","fetchOrders","err","Auth","password","isSignUp","controlName","updatedControls","switchAuthModeHandler","submitHandler","onAuth","errorMeesage","authData","returnSecureToken","url","idToken","userId","localId","authSuccess","expiresIn","App","exact","Boolean","window","location","hostname","updateObject","oldObject","updatedProperties","intialState","INGREDIENT_PRICES","salad","cheese","meat","bacon","addIngredientHelper","action","updatedIngredient","updatedState","removeIngredientHelper","updatedIngredientt","updatedStatee","setIngredientHelper","setIngredientFailedHelper","reducer","initialState","purchaseBurgerStartHelper","purchaseBurgerInitHelper","purchaseBurgerSuccessHelper","newOrder","purchaseBurgerFailedHelper","fetchOrderStartHelper","fetchOrderSuccessHelper","fetchOrderFailedHelper","authStart","authFail","authLogout","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","rootReducer","combineReducers","burgerBuilderReducer","orderReducer","authReducer","store","createStore","applyMiddleware","thunk","app","basename","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.72ca6857.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"BreadBottom\":\"_-_-src-components-Burger-Burgeringredient-Burgeringredient__BreadBottom--3_MfY\",\"BreadTop\":\"_-_-src-components-Burger-Burgeringredient-Burgeringredient__BreadTop--3EHpT\",\"Seeds1\":\"_-_-src-components-Burger-Burgeringredient-Burgeringredient__Seeds1--wWgW1\",\"Seeds2\":\"_-_-src-components-Burger-Burgeringredient-Burgeringredient__Seeds2--18uii\",\"Meat\":\"_-_-src-components-Burger-Burgeringredient-Burgeringredient__Meat--21hVk\",\"Cheese\":\"_-_-src-components-Burger-Burgeringredient-Burgeringredient__Cheese--2yFLA\",\"Salad\":\"_-_-src-components-Burger-Burgeringredient-Burgeringredient__Salad--xgrDz\",\"Bacon\":\"_-_-src-components-Burger-Burgeringredient-Burgeringredient__Bacon--2xzP-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"_-_-src-components-UI-Input-Input__Input--A73Jc\",\"Label\":\"_-_-src-components-UI-Input-Input__Label--3JH4c\",\"InputElement\":\"_-_-src-components-UI-Input-Input__InputElement--1lFOp\",\"Invalid\":\"_-_-src-components-UI-Input-Input__Invalid--3SMks\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SideDrawer\":\"_-_-src-components-Navigation-SideDrawer-SideDrawer__SideDrawer--3HuYy\",\"Open\":\"_-_-src-components-Navigation-SideDrawer-SideDrawer__Open--2IpgE\",\"Close\":\"_-_-src-components-Navigation-SideDrawer-SideDrawer__Close--iiNiZ\",\"Logo\":\"_-_-src-components-Navigation-SideDrawer-SideDrawer__Logo--2mqLq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControl\":\"_-_-src-components-Burger-BuildControls-BuildControl-BuildControl__BuildControl--1tNYr\",\"Label\":\"_-_-src-components-Burger-BuildControls-BuildControl-BuildControl__Label--3j_F9\",\"Less\":\"_-_-src-components-Burger-BuildControls-BuildControl-BuildControl__Less--3oD9z\",\"More\":\"_-_-src-components-Burger-BuildControls-BuildControl-BuildControl__More--x29Si\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Toolbar\":\"_-_-src-components-Navigation-Toolbar-Toolbar__Toolbar--rnjQR\",\"DesktopOnly\":\"_-_-src-components-Navigation-Toolbar-Toolbar__DesktopOnly--1DqdK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItem\":\"_-_-src-components-Navigation-NavigationItems-NavigationItem-NavigationItem__NavigationItem--4Kz8k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"_-_-src-components-UI-Modal-Modal__Modal--2eKUr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControls\":\"_-_-src-components-Burger-BuildControls-BuildControls__BuildControls--1gpKe\",\"OrderButton\":\"_-_-src-components-Burger-BuildControls-BuildControls__OrderButton--iO0u9\",\"enable\":\"_-_-src-components-Burger-BuildControls-BuildControls__enable---msEH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"_-_-src-components-UI-Button-Button__Button--3Sz2c\",\"Success\":\"_-_-src-components-UI-Button-Button__Success--2qYSO\",\"Danger\":\"_-_-src-components-UI-Button-Button__Danger--znY_R\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content\":\"_-_-src-hoc-Layout-Layout__Content--GDFjG\"};","module.exports = __webpack_public_path__ + \"static/media/burger-logo.b8503d26.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Logo\":\"_-_-src-components-Logo-Logo__Logo--2scwD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItems\":\"_-_-src-components-Navigation-NavigationItems-NavigationItems__NavigationItems--3WmHY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DrawerToggle\":\"_-_-src-components-Navigation-SideDrawer-DrawerToggle-DrawerToggle__DrawerToggle--eH8H6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"_-_-src-components-UI-Backdrop-Backdrop__Backdrop--Zn8QW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Burger\":\"_-_-src-components-Burger-Burger__Burger--2bOhr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"_-_-src-components-UI-Spinner-Spinner__Loader--3f9Sd\",\"load8\":\"_-_-src-components-UI-Spinner-Spinner__load8--3rR9I\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CheckoutSummary\":\"_-_-src-components-Order-CheckoutSummary-CheckoutSummary__CheckoutSummary--j0r17\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactData\":\"_-_-src-containers-Checkout-ContactData-ContactData__ContactData--315az\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Order\":\"_-_-src-components-Order-Order__Order--2HJOq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Auth\":\"_-_-src-containers-Auth-Auth__Auth--2wzer\"};","const aux = (props) => props.children;\n\n\nexport default aux;","import React from 'react';\n\nimport burgerLogo from '../../assets/images/burger-logo.png';\nimport classes from './Logo.css';\n\nconst logo = (props) => (\n    <div className={classes.Logo} style={{height:props.height}}>\n        <img src={burgerLogo} alt=\"myburger\" />\n    </div>\n\n);\n\nexport default logo;","import React from 'react';\nimport classes from './NavigationItem.css'\nimport {NavLink} from 'react-router-dom';\n\nconst navigationItem = (props) => (\n    <li className={classes.NavigationItem}> \n    <NavLink to={props.link} activeClassName= {classes.active}\n    >{props.children}</NavLink>\n    </li>\n)\n\nexport default navigationItem;","import React from 'react';\nimport classes from './NavigationItems.css'\n\nimport NavigationItem from './NavigationItem/NavigationItem';\nconst navigationItems = () => (\n    <ul className={classes.NavigationItems}>\n        {/* <NavigationItem link=\"/\" active>Burger builder</NavigationItem>\n\n        <NavigationItem link=\"/\">Checkout</NavigationItem> */}\n           <NavigationItem link=\"/\">Burger builder</NavigationItem>\n\n<NavigationItem link=\"/orders\">Orders</NavigationItem>\n\n<NavigationItem link=\"/auth\">Authentication</NavigationItem>\n   \n   \n    </ul>\n)\n\nexport default navigationItems;","import React from 'react';\nimport classes from './DrawerToggle.css';\n\nconst drawerToggle = (props) => (\n<div className={classes.DrawerToggle} onClick={props.clicked}>\n\n<div></div>\n<div></div>\n<div></div>\n</div>\n);\n\nexport default drawerToggle;","import React from 'react';\nimport classes from './Toolbar.css';\nimport Logo from '../../Logo/Logo';\nimport NavigationItems from '../NavigationItems/NavigationItems';\nimport DrawerToggle from '../SideDrawer/DrawerToggle/DrawerToggle';\nconst toolbar = (props) => (\n    <header className={classes.Toolbar}>\n<DrawerToggle clicked= {props.drawerToggleClicked}/>\n        <Logo height=\"80%\"/>\n        <nav className={classes.DesktopOnly}>\n\n        <NavigationItems/>\n        </nav>\n    </header>\n);\n\nexport default toolbar;","import React from 'react'\nimport classes from './Backdrop.css';\n\nconst backdrop = (props) => (\n   \n    props.show? <div className={classes.Backdrop}\n    onClick={props.clicked}></div>: null\n)\n\nexport default backdrop;","import React, {Component} from 'react';\nimport classes from './Modal.css';\nimport Aux from '../../../hoc/Aux/Aux';\nimport Backdrop from '../Backdrop/Backdrop';\nconsole.log(classes);\n   \nclass Modal extends Component {\n    shouldComponentUpdate(nextProps,nextState){\n        console.log(nextProps);\n        console.log(this.props);\n        console.log(nextProps.children);\n        \n            return nextProps.show !== this.props.show ||  nextProps.children !== this.props.shildren;\n    \n    }\n\n    componentWillUpdate(){\n        console.log('modal');\n    }\nrender(){\n    return (\n\n        <Aux>\n            <Backdrop show= {this.props.show} clicked={this.props.modalClosed}/>\n    <div\n         className={classes.Modal}\n         style={{\n             transform:this.props.show?'translateY(0)':'translateY(-200vh)',\n             opacity:this.props.show? '1': ':0'\n         }}>\n            {this.props.children}\n        </div>\n        </Aux>\n        \n        \n    );\n}\n}\nexport default Modal;","import React from 'react';\nimport Logo from '../../Logo/Logo';\nimport Modal from '../../UI/Modal/Modal';\nimport NavigationItems from '../NavigationItems/NavigationItems'\nimport classes from './SideDrawer.css';\nimport Backdrop from '../../UI/Backdrop/Backdrop';\nimport Aux from '../../../hoc/Aux/Aux';\nconst sideDrawer = (props) => {\n    let attachClasses = [classes.SideDrawer, classes.Close];\n    if(props.open){\n        attachClasses = [classes.SideDrawer, classes.Open];\n    }\n    console.log(props);\n    console.log(attachClasses);\n    return (\n        <Aux>\n          \n          <Backdrop show={props.open}  clicked={props.modalClosed}/>\n            />\n           <div className= {attachClasses.join(' ')}>\n            <Logo height=\"11%\"/>\n            <nav>\n                <NavigationItems/>\n            </nav>\n            \n        </div>\n        </Aux>\n        \n    )\n}\n\nexport default sideDrawer;","import React, {Component} from 'react';\nimport Aux from '../Aux/Aux';\nimport classes from './Layout.css';\nimport Toolbar from '../../components/Navigation/Toolbar/Toolbar';\n\nimport SideDrawer from '../../components/Navigation/SideDrawer/SideDrawer';\nclass Layout extends Component {\n    state = {\n        showSideDrawer: false\n    }\n    sideDrawerClosedHandler = () => {\n        console.log('dfsf');\n  this.setState({showSideDrawer:false});\n    }\n\n    drawerToggleClicked = () => {\n        this.setState((prevState)=>{\n        return {showSideDrawer: !prevState.showSideDrawer}\n        });\n    }\n    render(){\n        return (\n        <Aux>\n            <Toolbar drawerToggleClicked={this.drawerToggleClicked}/>\n        <SideDrawer  open={this.state.showSideDrawer}\n         modalClosed = {this.sideDrawerClosedHandler}/>\n\n<main className={classes.Content}>\n    {this.props.children}\n</main>\n    </Aux>\n\n    \n);\n    }\n} \n\nexport default Layout;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classes  from './Burgeringredient.css';\nimport BurgerBuilder from '../../../containers/BurgerBuilder/BurgerBuilder';\nclass BurgerIngredient extends Component {\n    render(){\n        let ingredient = null;\n\n        switch (this.props.type) {\n\n            case ('bread-top'):\n                    ingredient = (\n                    <div className={classes.BreadTop}>\n            \n            <div className={classes.Seeds1}></div>\n            \n            <div className={classes.Seeds2}></div>\n                    </div>\n                        \n                        \n                        \n                        );\n                    break;\n            case ('bread-bottom'):\n                ingredient = <div className={classes.BreadBottom}></div>;\n                break;\n        \n        \n                case ('meat'):\n                ingredient = (\n                <div className={classes.Meat}>\n        \n                </div>\n                  \n                    );\n                break;\n        \n        \n                case ('cheese'):\n                ingredient = (\n                <div className={classes.Cheese}>\n        \n                </div>\n                  \n                    );\n                break;\n        \n                case ('bacon'):\n                ingredient = (\n                <div className={classes.Bacon}>\n        \n                </div>\n                  \n                    );\n                break;\n        \n                case ('salad'):\n                ingredient = (\n                <div className={classes.Salad}>\n        \n                </div>\n                  \n                    );\n                break;\n        \n                default:\n                    ingredient = null;\n        \n        \n        }\n        return ingredient;\n        };\n    }\n\n\nBurgerIngredient.protoTypes = {\n    type:PropTypes.string.isRequired\n}\nexport default BurgerIngredient;","import React from 'react';\nimport classes from './Burger.css';\nimport BurgerIngredient from './Burgeringredient/Burgeringredient';\nconst burger = ( props ) => {\n    console.log(props);\n    let transformedIngredients = Object.keys( props.ingredients )\n        .map( igKey => {\n            return [...Array( props.ingredients[igKey] )].map( ( _, i ) => {\n                return <BurgerIngredient key={igKey + i} type={igKey} />;\n            } );\n        } )\n        .reduce((arr, el) => {\n            return arr.concat(el)\n        }, []);\n    if (transformedIngredients.length === 0) {\n        transformedIngredients = <p>Please start adding ingredients!</p>;\n    }\n    return (\n        <div className={classes.Burger}>\n            <BurgerIngredient type=\"bread-top\" />\n            {transformedIngredients}\n            <BurgerIngredient type=\"bread-bottom\" />\n        </div>\n    );\n};\n\n\nexport default burger;","import React from 'react'\n\nimport classes from './BuildControl.css';\n\nconst buildControl = (props) => (\n    <div className={classes.BuildControl}>\n        <div className={classes.Label}>{props.label}</div>\n<button className={classes.Less} onClick={props.removed} disabled={props.disabled}>Less</button>\n<button className={classes.More} onClick={props.added}>More</button>\n    </div>\n);\n\nexport default buildControl;\n","import React from 'react';\nimport classes from './BuildControls.css';\nimport BuildControl from './BuildControl/BuildControl';\n\nconst controls = [\n    {label:'Salad', type:'salad'},\n    {label:'Bacon', type:'bacon'},\n    {label:'Cheese', type:'cheese'},\n    {label:'Meat', type:'meat'}\n];\nconst buildControls= (props) => (\n    <div className={classes.BuildControls}>\n        <p>Current Price: <strong>{props.price.toFixed(2)}</strong></p>\n        {controls.map(ctrl => (\n                <BuildControl \n                key={ctrl.label} \n                label={ctrl.label}\n                added={()=>props.ingredientAdded(ctrl.type)}\n                removed={()=>props.ingredientRemoved(ctrl.type)}\n                disabled={props.disabled[ctrl.type]}\n                />\n        )\n        )}\n        <button \n        className={classes.OrderButton}\n         disabled={!props.purchasable}\n         onClick={props.ordered}>ORDER NOW</button>\n    </div>\n);\nexport default buildControls","import React from 'react';\n\nimport classes from './Button.css';\nconst button = (props) => (\n    <button className={[classes.Button, classes[props.btnType]].join(' ')}\n     onClick={props.clicked} disabled={props.disabled}>{props.children}</button>\n);\n\n\nexport default button;","import React, {Component} from 'react';\nimport Aux from '../../../hoc/Aux/Aux';\nimport Button from '../../UI/Button/Button';\nclass OrderSummary extends Component {\ncomponentWillUpdate(){\n    console.log('[ordersummary] will update');\n}\nrender(){\n    const ingredientSummary = Object.keys(this.props.ingredients)\n    .map(igKey => {\n    return (\n<li key={igKey}><span style={{textTransform:'capitalize'}}>{igKey}</span>: {this.props.ingredients[igKey]}</li>\n    ) \n    })\nreturn (\n    <Aux>\n        <h3>Your Order</h3>\n        <p>A delicious burger with the following ingredients:</p>\n        <ul>\n{ingredientSummary}\n        </ul>\n<p><strong>Total Price: {this.props.price.toFixed(2)}</strong></p>\n        <p>Continue to checkout:</p>\n        <Button btnType=\"Danger\" clicked={this.props.purchaseCanceled}>CANCEL</Button>\n        <Button btnType=\"Success\" clicked={this.props.purchaseContinued}>CONTINUE</Button>\n    </Aux>\n)\n}\n}\n\nexport default OrderSummary;","import axios from 'axios';\n\nconst instance = axios.create({\n    baseURL:'https://burger-builder-app-c2aca.firebaseio.com/'\n})\n\nexport default instance;","import React from 'react';\nimport  classes  from './Spinner.css';\n\nconst spinner = () => (\n<div className={classes.Loader}>Loading ...</div>\n);\n\nexport default spinner;","import React,{Component} from 'react';\nimport Model from '../../components/UI/Modal/Modal';\nimport Aux from '../Aux/Aux';\nconst withErrorHandler = (WrappedComponent, axios) => {\n\n    return class extends Component {\n        state = {\n            error: null\n        }\n\n        componentWillMount(){\n            console.log(WrappedComponent);\n            console.log(axios);\n        this.reqInterceptor = axios.interceptors.request.use(req=>{\n            this.setState({error: null});\n            return req;\n        })\n        this.resInterceptor =  axios.interceptors.response.use(resp=>resp, error=>{\n           this.setState({error: error});\n            })\n        }\n\n        componentWillUnmount() {\n            axios.interceptors.request.eject(this.reqInterceptor);\n            axios.interceptors.request.eject(this.resInterceptor);\n        }\n\n\n\n        errorConfirmedHandler = ()  => {\n            this.setState({error:null});\n            }\n\n        render(){\n\n            return (\n                <Aux>\n                    <Model show ={this.state.error}\n                    modalClosed= {this.errorConfirmedHandler}>\n                        {this.state.error?this.state.error.message:null}\n\n                    </Model>\n                    <WrappedComponent {...this.props} />\n                </Aux>\n            )\n        }\n    }\n\n}\n\nexport default withErrorHandler","import * as actionTypes from './actionTypes';\nimport axios from '../../axios-orders';\n\nexport const purchaseBurgerSuccess = (orderData, id) => {\n    return {\n        type: actionTypes.PURCHASE_BURGER_SUCCESS,\n        orderData: orderData,\n        orderId: id\n\n    }\n}\n\nexport const purchaseBurgerFailed = (error) => {\n    return {\n        type: actionTypes.PURCHASE_BURGER_FAILED,\n        error: error\n    }\n}\n\nexport const purchaseBurgerStart = () => {\n    return {\n        type: actionTypes.PURCHASE_BURGER_START\n    }\n}\n\n\nexport const purchaseBurger = (orderData) => {\n return dispatch => {\n     dispatch(purchaseBurgerStart());\n    axios.post('/orders.json',orderData).then(response=>{\n        console.log(response);\n        dispatch(purchaseBurgerSuccess(response.data,response.data.name))\n    }).catch(error=>{\n        console.log(error);\n        dispatch(purchaseBurgerFailed(error));\n    })\n }   \n}\n\nexport const purchaseInit = () =>{\n    return {\n        type: actionTypes.PURCHAGE_INIT\n    }\n}\n\n\n\n\n\nexport const fetchOrdersStart = () => {\n\n    return {\n        type: actionTypes.FETCH_ORDERS_START\n    }\n\n}\n\n\nexport const fetchOrdersSuccess = (orders) => {\n    return {\n        type: actionTypes.FETCH_ORDERS_SUCCESS,\n        orders: orders\n    }\n}\n\nexport const fetchOrdersFail = (error) => {\n    return {\n        type: actionTypes.FETCH_ORDERS_FAIL,\n        error: error\n    }\n}\n\n\nexport const  fetchOrders = () => {\n    return dispatch => {\n        dispatch(fetchOrdersStart());\n        axios.get('/orders.json')\n        .then(res => {\n            const fetchOrders = [];\n            for(let key in res.data) {\n                fetchOrders.push({\n                    ...res.data[key],\n                    id:key\n                })\n            }\n            dispatch(fetchOrdersSuccess(fetchOrders));\n        })\n        .catch(err=>{\n            dispatch(fetchOrdersFail(err));\n        })\n    }\n}\n","import * as actionTypes from './actionTypes';\nimport axios from 'axios';\n\n\nexport const authStart = () => {\n    return {\n        type: actionTypes.AUTH_START\n    }\n}\n\nexport const authSuccess = (authData) => {\n    return {\n        type: actionTypes.AUTH_SUCCESS,\n        idToken: authData.idToken,\n        userId: authData.localId\n    }\n}\n\nexport const authFail = (error) => {\n    return {\n        type: actionTypes.AUTH_FAIL,\n        error:error\n    }\n}\n\n\nexport const auth = (email,password, isSignUp) => {\n    return dispatch => {\n        dispatch(authStart());\n        const authData = {\n            email: email,\n            password:password,\n            returnSecureToken: true\n        }\n        let url = 'https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyDDmOTPcmRkrj5jVnFuJjvUcMF3l3CVdA4';\n        if(!isSignUp) {\n            url = 'https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyDDmOTPcmRkrj5jVnFuJjvUcMF3l3CVdA4'\n        }\n        axios.post(url, authData)\n        .then(response => {\n            console.log(response);\n            dispatch(authSuccess(response.data));\n            dispatch(checkAuthTimeout(response.data.expiresIn))\n        } )\n        .catch(err=>{\n            console.log(err);\n             dispatch(authFail(err.response.data.error));\n        })\n    }\n}\n\nexport const authLogout = () => {\n    return {\n        type: actionTypes.AUTH_LOGOUT\n    }\n} \n\nexport const checkAuthTimeout = (expirationTime) => {\n    return dispatch => {\n        setTimeout(() => {\n            dispatch(authLogout());\n        }, expirationTime*1000);\n    }\n}"," export const ADD_INGREDIENT = 'ADD_INGREDIENT';\n export const REMOVE_INGREDIENT = 'REMOVE_INGREDIENT'; \n export const SET_INGREDIENT = 'SET_INGREDIENT';\n export const SET_INGREDIENT_FAILED = 'SET_INGREDIENT_FAILED';\n\n export const PURCHASE_BURGER_SUCCESS = 'PURCHASE_BURGER_SUCCESS';\n export const PURCHASE_BURGER_FAILED = 'PURCHASE_BURGER_FAILED';\n export const PURCHASE_BURGER_START = 'PURCHASE_BURGER_START';\n\n export const PURCHAGE_INIT = 'PURCHAGE_INIT';\n\n\n export const FETCH_ORDERS_START = 'FETCH_ORDERS_START';\n\n export const FETCH_ORDERS_SUCCESS = 'FETCH_ORDERS_SUCESS';\n\n export const FETCH_ORDERS_FAIL = 'FETCH_ORDERS_FAIL';\n\n\n\n export const AUTH_START = 'AUTH_START';\n\n export const AUTH_SUCCESS = 'AUTH_SUCCESS';\n\n export const AUTH_FAIL = 'AUTH_FAIL';\n\n export const AUTH_LOGOUT = 'AUTH_LOGOUT';","import React, { Component } from 'react';\nimport Aux from '../../hoc/Aux/Aux';\nimport Burger from '../../components/Burger/Burger'\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\nimport Modal from '../../components/UI/Modal/Modal';\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary';\nimport axios from '../../axios-orders';\nimport Spinner from '../../components/UI/Spinner/Spinner';\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\nimport {connect} from 'react-redux';\nimport * as burgerBuilderActions from '../../store/actions/index';\n\n\nclass BurgerBuilder extends Component {\n//      constructor(props){\n// super(props);\n// this.state = {};\n//     }\nstate = {\n    purchasing:false,\n    loading:true,\n    error:false\n}\n\ncomponentDidMount() {\n    this.props.onInitIngredients();\n    // axios.get('https://burger-builder-app-c2aca.firebaseio.com/ingredients.json')\n    // .then(response=>{\n    //     this.setState({ingredients:response.data});\n    // }).catch(error=>{\n    //     this.setState({error:true});\n    // })\n}\n\npurchaseHandler =() =>{\n    this.setState({purchasing:true});\n}\n\npurchaseCancelHandler = () => {\n\n    this.setState({purchasing:false});\n}\n\npurchaseContinueHandler = () => {\n    // console.log(this.props);\n    // console.log('coming here ..');\n    // const queryParams = [];\n    // for(let i in this.props.ings){\n    //     queryParams.push(encodeURIComponent(i)+'='+encodeURIComponent(this.props.ings[i]));\n    // }\n    // queryParams.push('price='+this.state.totalPrice);\n    // const queryString = queryParams.join('&');\n    // console.log(queryString);\n    // this.props.history.push({\n    //     pathname: '/checkout',\n    //     search: '?'+queryString\n    // });\n    this.props.history.push('/checkout');\n    console.log(this.props);\n}\n\nupdatePurchasedState(ingredients) {\n    // const ingredients = {\n    //     ...this.state.ingredients\n    // };\n    const sum = Object.keys(ingredients).map(igKey=>{\n        return ingredients[igKey];\n    }).reduce((sum,el)=>{\n        return sum+el;\n    },0);\n    // this.setState({purchasable:sum>0});\n    return sum>0\n}\n\n// addIngredientHandler = (type) => {\n// const oldCount = this.props.ings[type];\n\n// const updatedCount = oldCount+1;\n// const updatedIngredients = {\n//     ...this.props.ings\n// };\n// updatedIngredients[type] = updatedCount;\n// const priceAddition = INGREDIENT_PRICES[type];\n// const oldPrice = this.state.totalPrice;\n// const newPrice = oldPrice + priceAddition;\n// this.setState({totalPrice:newPrice, ingredients:updatedIngredients});\n// this.updatePurchasedState(updatedIngredients);\n// }\n\n// removeIngredientHandler = (type) => {\n\n//     const oldCount = this.props.ings[type];\n//     if (oldCount<=0) {\n//         return;\n//     }\n// const updatedCount = oldCount-1;\n// const updatedIngredients = {\n//     ...this.props.ings\n// };\n// updatedIngredients[type] = updatedCount;\n// const priceDeduction = INGREDIENT_PRICES[type];\n// const oldPrice = this.state.totalPrice;\n// const newPrice = oldPrice - priceDeduction;\n// this.setState({totalPrice:newPrice, ingredients:updatedIngredients});\n// this.updatePurchasedState(updatedIngredients);\n    \n// }\n    render(){\n        console.log(this.props)\n        const disabledInfo = {\n            ...this.props.ings\n        }\n        for(let key in disabledInfo){\n            disabledInfo[key] =  disabledInfo[key]<=0 \n        }\n\n        \n        let orderSummery = null;\n        let burger = this.props.error?<p>Ingredients can not be loaded</p>:<Spinner/>\n\n        if (this.props.ings) {\n            burger = (\n                <Aux>\n            \n            <Burger ingredients={this.props.ings}/>\n                    <BuildControls \n                    ingredientAdded= {this.props.onIngredientAdded}\n                    ingredientRemoved= {this.props.onIngredientRemoved}\n                    disabled={disabledInfo}\n                    price={this.props.price}\n                    purchasable={this.updatePurchasedState(this.props.ings )}\n                    ordered={this.purchaseHandler}/>\n                </Aux>\n            )\n\n        orderSummery =  <OrderSummary\n        ingredients = {this.props.ings}\n        purchaseCanceled={this.purchaseCancelHandler}\n         price={this.props.price}\n        purchaseContinued={this.purchaseContinueHandler}/>\n            \n        }\n\n\n        // if (this.state.loading) {\n        //     orderSummery = <Spinner/>\n            \n        // }\n\n        // {salad:true, meat:false,...}\n        return (\n            <Aux>\n                <Modal show={this.state.purchasing} modalClosed={this.purchaseCancelHandler}>\n                  {orderSummery}\n                </Modal>\n                {burger}\n            </Aux>\n        );\n    }\n\n}\n\nconst mapStateToProps = (state) => {\n    console.log(state);\n    return {\n        ings: state.burgerBuilder.ingredients,\n        price:state.burgerBuilder.totalPrice,\n        error: state.burgerBuilder.error\n    }\n}\n\nconst mapDispatchToProps = (dispatch) =>{\n    return {\nonIngredientAdded:(ingName) => dispatch(burgerBuilderActions.addIngredient(ingName)),\n\nonIngredientRemoved:(ingName) => dispatch(burgerBuilderActions.removeIngredient(ingName)),\nonInitIngredients: () => dispatch(burgerBuilderActions.initIngredients())\n    }\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(withErrorHandler(BurgerBuilder,axios));","import * as actionTypes from './actionTypes';\nimport axios from '../../axios-orders';\n\nexport const addIngredient = (name) => {\n    return {\n        type: actionTypes.ADD_INGREDIENT,\n        ingredientName: name\n    }\n}\n\n\nexport const removeIngredient = (name) => {\n    return {\n        type: actionTypes.REMOVE_INGREDIENT,\n        ingredientName: name\n    }\n}\n\n\nexport const setIngredient = (ingredients) => {\n    return {\n        type: actionTypes.SET_INGREDIENT,\n        ingredients: ingredients\n    }\n}\nexport const initIngredientFailed = () => {\n    return {\n        type: 'SET_INGREDIENT_FAILED'\n    }\n}\n\nexport const initIngredients = () => {\n    return dispatch => {\n        axios.get('https://burger-builder-app-c2aca.firebaseio.com/ingredients.json')\n            .then(response => {\n                dispatch(setIngredient(response.data))\n        \n            }).catch(error => {\n                dispatch(initIngredientFailed())\n            })\n    }\n}","\nimport React from 'react';\nimport Burger from '../../Burger/Burger';\nimport Button from '../../UI/Button/Button';\nimport Classes from './CheckoutSummary.css'; \nconst CheckoutSummary = (props)=>{\nreturn (\n    <div className={Classes.CheckoutSummary}>\n        <h1>Hope, it tastes well!</h1>\n        <div style={{width:'100%', margin:'auto'}}>\n            <Burger ingredients = {props.ingredients}/>\n        </div>\n        <Button btnType=\"Danger\" clicked={props.checkoutCancelled}>CANCEl</Button>\n\n        <Button btnType=\"Success\" clicked={props.checkoutContinued}>CONTINUE</Button>\n    </div>\n)\n}\n\nexport default CheckoutSummary;","import React from 'react';\nimport classes from './Input.css';\nconst input = (props) => {\n    let inputElement = null;\n    const inputClasses = [classes.InputElement];\n    console.log(props);\n    if(props.invalid && props.shouldValidate && props.touched) {\n        inputClasses.push(classes.Invalid)\n    }\n    switch (props.elementType) {\n        case ('input'):\n            inputElement = <input className={inputClasses.join(' ')}\n                {...props.elementConfig} value={props.value} onChange={props.changed} />;\n            break;\n        case ('textarea'):\n            inputElement = <textarea className={classes.InputElement}\n                {...props.elementConfig} value={props.value} onChange={props.changed} />;\n            break;\n        case ('select'):\n            inputElement = (\n                <select\n                    className={classes.InputElement}\n                    value={props.value}\n                    onChange={props.changed}>\n                    {props.elementConfig.options.map(option => (\n                        <option key={option.value} value={option.value}>\n                            {option.displayValue}\n                        </option>\n                    ))}\n                </select>\n            );\n            break;\n\n        default:\n\n            inputElement = <input className={classes.InputElement}\n                {...props.elementConfig} value={props.value} onChange={props.changed} />;\n            break;\n    }\n    return (\n\n        <div className={classes.Input}>\n            <label className={classes.Label}>{props.label}</label>\n            {inputElement}\n        </div>\n\n    )\n}\n\n\nexport default input;","\nimport React, {Component} from 'react';\nimport Button from '../../../components/UI/Button/Button';\nimport classes from './ContactData.css'\nimport axios from '../../../axios-orders';\nimport Spinner from '../../../components/UI/Spinner/Spinner';\nimport Input from '../../../components/UI/Input/Input';\nimport {connect} from 'react-redux';\nimport * as actions from '../../../store/actions/index';\nimport withErrorHandler from '../../../hoc/withErrorHandler/withErrorHandler';\nclass ContactData extends Component {\nstate = {\n    orderForm:{\n        name:{\n            elementType:'input',\n            elementConfig:{\n                type:'text',\n                placeholder:'Your name'\n            },\n            value:'',\n            validation:{\n                required: true\n            },\n            valid:false,touched:false\n        },\n        email: {\n            elementType:'input',\n            elementConfig:{\n                type:'text',\n                placeholder:'Your email'\n            },\n            value:'',\n            validation:{\n                required: true\n            },valid:false,touched:false\n        },\n            street:{\n                elementType:'input',\n                elementConfig:{\n                    type:'text',\n                    placeholder:'Your street'\n                },\n                value:'',\n                validation:{\n                    required: true\n                },valid:false,touched:false\n            },\n            zipCode:{\n                elementType:'input',\n                elementConfig:{\n                    type:'text',\n                    placeholder:'zip'\n                },\n                value:'',\n                validation:{\n                    required: true,\n                    minLength:5,\n                    maxLength:5\n                },valid:false,touched:false\n            },\n            country:{\n                elementType:'input',\n                elementConfig:{\n                    type:'text',\n                    placeholder:'country'\n                },\n                value:'',\n                validation:{\n                    required: true\n                },valid:false,touched:false\n            },\n            deliveryMethod:{\n                elementType:'select',\n                elementConfig:{\n                    options:[\n                        {value:'fastest', displayValue:'Fastest'},\n                        {value:'cheapest', displayValue:'Cheapest'}\n                    ]\n                },\n                value:'cheapest',\n                validation:{},\n                valid:true\n            }\n    },\n    loading:false,\n    formIsValid:false\n}\n\norderHandler = (event) =>{\nevent.preventDefault();\nconsole.log(this.props);\nthis.setState({loading:true});\nconst formData = {};\nconsole.log(this.state.orderForm);\nfor(let formElementIdentifier in this.state.orderForm){\n    console.log(formElementIdentifier);\n     console.log(this.state.orderForm[formElementIdentifier].elementType);\n     formData[formElementIdentifier] = this.state.orderForm[formElementIdentifier].value;\n}\n\nconsole.log(formData);\n\nconst order = {\n    ingredients:this.props.ings,\n    price: this.props.price,\n    orderData:formData\n}\nthis.props.onOrderBuger(order);\n// axios.post('/orders.json',order).then(response=>{\n//     console.log(response);\n//     this.setState({loading:false});\n//     this.props.history.push('/');\n// }).catch(error=>{\n//     console.log(error);\n//     this.setState({loading:false});\n// })\n}\n\ncheckValidity(value,rules){\n    console.log(value);\n    console.log(rules)\nlet isValid = true;\nif (rules && rules.required) {\n    isValid = value.trim() !== '' && isValid;\n}\nif (rules && rules.minLength) {\n    isValid = value && value.length >= rules.minLength && isValid;\n}\nif (rules && rules.maxLength) {\n\n    isValid = value && value.length <= rules.maxLength && isValid;\n}\n\nreturn isValid;\n}\n\n\n\ninputChangedHandler =(event, inputIdentifier)=> {\nconst updatedOrderForm = {\n    ...this.state.orderForm\n};\nconst updatedFormElement = {\n    ...updatedOrderForm[inputIdentifier]\n}\nupdatedFormElement.value = event.target.value;\nupdatedFormElement.valid = this.checkValidity(updatedFormElement.value, updatedFormElement.validation)\nupdatedFormElement.touched = true;\nupdatedOrderForm[inputIdentifier] = updatedFormElement;\nlet isFormValid = true;\nfor(let inputIdentifier in updatedOrderForm){\n   isFormValid = updatedOrderForm[inputIdentifier].valid && isFormValid;\n}\nconsole.log(isFormValid);\nthis.setState({\n    orderForm:updatedOrderForm, formIsValid: isFormValid\n})\n}\n\nrender(){\n    const formElementArray = [];\n    for(let key in this.state.orderForm){\n        formElementArray.push({\n            id:key,\n            config:this.state.orderForm[key]\n        })\n    }\n    let form = (\n        <form onSubmit={this.orderHandler}>\n               {formElementArray.map(formElement=>(\n                <Input \n                key={formElement.id}\n                elementType={formElement.config.elementType} \n                elementConfig={formElement.config.elementConfig}  \n                value={formElement.config.value} \n                invalid={!formElement.config.valid}\n                shouldValidate={formElement.config.validation}\n                touched={formElement.config.touched}\n                changed={(event) => this.inputChangedHandler(event, formElement.id)}/>\n    ))}\n                <Button btnType=\"Success\" disabled={!this.state.formIsValid}>ORDER</Button>\n            </form>\n    );\n    if (this.props.loading) {\n        form = <Spinner/>  \n    }  \n\n    return (\n        <div className={classes.ContactData}>\n            <h4>Enter your contact data</h4>\n            {form}\n        </div>\n    );\n}\n}\n\nconst mapStateToProps = state => {\n    return {\n        ings: state.burgerBuilder.ingredients,\n        price: state.burgerBuilder.totalPrice,\n        loading: state.order.loading\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onOrderBuger: (orderData) => dispatch(actions.purchaseBurger(orderData))\n    }\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(withErrorHandler(ContactData,axios));","import React, { Component } from 'react'; \nimport CheckoutSummary from '../../components/Order/CheckoutSummary/CheckoutSummary';\n//import { URLSearchParams } from 'url';\nimport {Route, Redirect} from 'react-router-dom';\nimport ContactData from './ContactData/ContactData';\nimport {connect} from 'react-redux';\nimport * as actionTypes from '../../store/actions/index';\n class Checkout extends Component {\n   componentDidMount() {\n     this.props.onInitPurchase();\n   }\n    //  state = {\n    //      ingredients : null,\n    //      totalPrice:0\n    //  }\n\n    //  componentWillMount(){\n    //      console.log(this.props.location.search);\n    //    const query = new URLSearchParams(this.props.location.search);\n    //       const ingredients ={};\n    //       let price = 0;\n    //       for(let param of query.entries()){\n    //           if (param[0] === 'price') {\n    //             price = param[1]; \n    //           } else {\n               \n    //         ingredients[param[0]]= +param[1];   \n    //           }\n    //       }\n    //       console.log(ingredients);\n    //       this.setState({ingredients:ingredients, totalPrice:price})\n    //  }\n     cancelHandler = () => {\n   this.props.history.goBack();\n     }\n     continueHandler = () => {\n  this.props.history.replace('/checkout/contact-data');\n     }\nrender(){\n  let summary = <Redirect to =\"/\"/>\n  if(this.props.ings) {\n    console.log(this.props);\n    const purchaseRedirect = this.props.purchased?<Redirect to =\"/\"/>:null\n    summary = (\n      <div>\n        {purchaseRedirect}\n      <CheckoutSummary\n      checkoutCancelled = {this.cancelHandler}\n      checkoutContinued = {this.continueHandler}\n       ingredients={this.props.ings}/>\n\n       <Route path={this.props.match.path + '/contact-data'} \n       component={ContactData}\n      //  render = {(props)=>(<ContactData ingredient={this.state.ingredients} totalPrice={this.state.totalPrice} {...props}/>)}\n       />\n  </div>\n\n    )\n  }\n    return summary;\n}\n }\n\n const mapStateToProps = (state) => {\n   return {\n     ings: state.burgerBuilder.ingredients,\n     price: state.burgerBuilder.totalPrice,\n     purchased: state.order.purchased\n   }\n }\n const mapDispatchToprops = dispatch => {\n   return {\n    onInitPurchase: () => dispatch(actionTypes.purchaseInit())\n   }\n }\n\n export default connect(mapStateToProps, mapDispatchToprops)(Checkout);","import React from \"react\";\nimport classes from './Order.css';\n\nconst order = ( props ) => {\n    const ingredients = [];\n\n    for ( let ingredientName in props.ingredients ) {\n        ingredients.push(\n            {\n                name: ingredientName,\n                amount: props.ingredients[ingredientName]\n            }\n        );\n    }\n\n    const ingredientOutput = ingredients.map(ig => {\n        return <span \n            style={{\n                textTransform: 'capitalize',\n                display: 'inline-block',\n                margin: '0 8px',\n                border: '1px solid #ccc',\n                padding: '5px'\n                }}\n            key={ig.name}>{ig.name} ({ig.amount})</span>;\n    });\n\n    return (\n        <div className={classes.Order}>\n            <p>Ingredients: {ingredientOutput}</p>\n            <p>Price: <strong>USD {Number.parseFloat( props.price ).toFixed( 2 )}</strong></p>\n        </div>\n    );\n};\n\nexport default order;\n\n\n\n","\nimport React, { Component } from 'react';\nimport Order from '../../components/Order/Order';\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\nimport * as actionTypes from '../../store/actions/index';\nimport {connect} from 'react-redux'; \nimport Spinner from '../../components/UI/Spinner/Spinner';\nimport axios from '../../axios-orders';\nclass Orders extends Component {\n\n    componentDidMount(){\n        console.log(this.props)\n     this.props.onFetchOrders();\n    }\n    render() {\n        let orders = <Spinner/>;\n        if(!this.props.loading) {\n            orders = this.props.orders.map(order=>(\n\n                <Order key={order.id}\n                ingredients={order.ingredients}\n                price={order.price}/>  \n            ))\n        }\n        return (\n            <div>\n      {\n          orders\n      }\n           \n            </div>\n        );\n    }\n}\nconst mapStateToProps = state => {\n    return {\n        orders: state.order.orders,\n        loading:state.order.loading,\n        token:state.auth.token\n    }\n}\nconst mapDispatchToProps = dispatch => {\n    return {\n        onFetchOrders: ()=>dispatch(actionTypes.fetchOrders())\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(Orders,axios));","import React, { Component } from 'react';\nimport Input from '../../components/UI/Input/Input';\nimport {connect} from 'react-redux';\nimport classes from './Auth.css';\nimport Button from '../../components/UI/Button/Button';\nimport * as actions from '../../store/actions/index';\nimport Spinner from '../../components/UI/Modal/Modal';\n\nclass Auth extends Component {\n    state = {\n        controls:{\n            email:{\n                elementType:'input',\n                elementConfig:{\n                    type:'email',\n                    placeholder:'Your email'\n                },\n                value:'',\n                validation:{\n                    required: true\n                },\n                valid:false,touched:false\n            },\n            password: {\n                elementType:'input',\n                elementConfig:{\n                    type:'password',\n                    placeholder:'Your password'\n                },\n                value:'',\n                validation:{\n                    required: true, minLength:5\n                },valid:false,touched:false\n               \n            }\n        },\n        isSignUp:false\n    }\n\n    inputChangedHandler = (event, controlName) => {\n        const updatedControls = {\n            ...this.state.controls,\n            [controlName]: {\n                ...this.state.controls[controlName],\n                value: event.target.value,\n                valid: this.checkValidity(event.target.value,this.state.controls[controlName].validation),\n                touched:true\n            }\n        };\n        this.setState({controls: updatedControls});\n\n    }\n\n    switchAuthModeHandler = () => {\n        this.setState(prevState=>{\n            return {isSignUp: !this.state.isSignUp}\n        })\n    }\n\n    checkValidity(value,rules){\n        console.log(value);\n        console.log(rules)\n    let isValid = true;\n    if (rules && rules.required) {\n        isValid = value.trim() !== '' && isValid;\n    }\n    if (rules && rules.minLength) {\n        isValid = value && value.length >= rules.minLength && isValid;\n    }\n    if (rules && rules.maxLength) {\n    \n        isValid = value && value.length <= rules.maxLength && isValid;\n    }\n    \n    return isValid;\n    }\n\n    submitHandler =(event) =>{\n     event.preventDefault();\n     this.props.onAuth(this.state.controls.email.value, this.state.controls.password.value, this.state.isSignUp)\n    }\nrender(){\n    const formElementArray = [];\n    for(let key in this.state.controls){\n        formElementArray.push({\n            id:key,\n            config:this.state.controls[key]\n        })\n    }\n\n   let form = formElementArray.map(formElement=>(\n    <Input \n    key={formElement.id}\n    elementType={formElement.config.elementType} \n    elementConfig={formElement.config.elementConfig}  \n    value={formElement.config.value} \n    invalid={!formElement.config.valid}\n    shouldValidate={formElement.config.validation}\n    touched={formElement.config.touched}\n    changed={(event) => this.inputChangedHandler(event, formElement.id)}/>\n))\n\nif(this.props.loading) {\n    form = <Spinner/> \n}\n\nlet errorMeesage = null;\nif(this.props.error) {\n    errorMeesage = (\n    <p>{this.props.error.message}</p>\n    )\n}\n    return (\n        <div className={classes.Auth}>\n            {errorMeesage }\n            <form onSubmit={this.submitHandler}>\n            {form}\n            <Button btnType=\"Success\">Submit</Button>\n            </form>\n\n    <Button clicked={this.switchAuthModeHandler} btnType=\"Danger\">Switch to {this.state.isSignUp?'SIGN IN': 'Sign Up'}</Button>\n        </div>\n\n    );\n}\n}\n\n\nconst mapStateToProps = state => {\n    return {\n        loading : state.auth.loading,\n        error:state.auth.error\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onAuth: (email,password, isSignUp) => dispatch(actions.auth(email,password, isSignUp))\n    }\n}\n\nexport default connect(mapStateToProps , mapDispatchToProps)(Auth);","import React, {Component} from 'react';\nimport Layout from './hoc/Layout/Layout';\nimport BurgerBuilder from './containers/BurgerBuilder/BurgerBuilder';\nimport Checkout from './containers/Checkout/Checkout';\nimport {Route, Switch} from 'react-router-dom';\nimport Orders from './containers/Orders/Orders';\nimport Auth from './containers/Auth/Auth';\n// function App() {\n//   return (\n//     <div>\n\n\n//     </div>\n    \n//   );\n// }\n\n\nclass App extends Component {\n  render(){\n    return (\n      <div>\n        <Layout>\n          {/* <BurgerBuilder/>\n          <Checkout /> */}\n        <Switch>\n          \n        <Route path= \"/checkout\" component = {Checkout} />\n        <Route path= \"/orders\" component = {Orders} />\n        <Route path= \"/Auth\" component = {Auth} />\n        <Route path= \"/\" exact component = {BurgerBuilder} />\n        </Switch>\n        </Layout>\n        \n      </div>\n    )\n  }\n}\n\n export default App;\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","export const updateObject = (oldObject, updatedProperties) => {\n    return {\n        ...oldObject,\n        ...updatedProperties\n    }\n}","import * as actionTypes from '../actions/actionTypes';\nimport { updateObject} from '../utility';\nconst intialState = {\n    ingredients: null,\n    totalPrice:4,\n    error: false\n};\nconst INGREDIENT_PRICES = {\n    salad:0.5,\n    cheese:0.4,\n    meat:1.3,\n    bacon:0.7\n};\nconst addIngredientHelper = (state,action)=>{\n\n    const updatedIngredient = {[action.ingredientName]: state.ingredients[action.ingredientName] + 1};\n    const updatedIngredients =  updateObject(state.ingredients,updatedIngredient);\n    const  updatedState = {\n        ingredients: updatedIngredients,\n        totalPrice: state.totalPrice+INGREDIENT_PRICES[action.ingredientName]\n    }\n     return updateObject(state, updatedState);\n}\n\nconst removeIngredientHelper = (state,action)=>{\n \n    const updatedIngredientt = {[action.ingredientName]: state.ingredients[action.ingredientName] - 1};\n       const updatedIngredientss =  updateObject(state.ingredients,updatedIngredientt);\n       const updatedStatee = {\n           ingredients: updatedIngredientss,\n           totalPrice: state.totalPrice-INGREDIENT_PRICES[action.ingredientName]\n       }\n        return updateObject(state, updatedStatee);   \n}\n\nconst setIngredientHelper = (state,action)=>{\n    return updateObject(state,{\n        ingredients: {\n            salad: action.ingredients.salad,\n            bacon: action.ingredients.bacon,\n            cheese: action.ingredients.cheese,\n            meat: action.ingredients.meat\n        },\n        error: false,\n        totalPrice:4\n\n     })\n}\n\n\nconst setIngredientFailedHelper = (state,action)=>{\n    \n    return updateObject(state, {error:true})\n}\nconst reducer = (state=intialState, action) => {\nswitch (action.type) {\n    case actionTypes.ADD_INGREDIENT: return addIngredientHelper(state,action);\n    case actionTypes.REMOVE_INGREDIENT: return removeIngredientHelper(state,action);\n        //         return {\n        //             ...state,\n        //             ingredients:{\n        //                 ...state.ingredients,\n        //                 [action.ingredientName]: state.ingredients[action.ingredientName] - 1\n        //             },\n\n        //    totalPrice: state.totalPrice-INGREDIENT_PRICES[action.ingredientName]\n        //          };\n\n\n                 case actionTypes.SET_INGREDIENT:\n                     return setIngredientHelper(state,action);\n                    //  return {\n                    //      ...state,\n                    //      ingredients: action.ingredients,\n                    //      error: false\n                    //  }\n\n                    // return {\n                    //     ...state,\n                    //     ingredients: {\n                    //         salad: action.ingredients.salad,\n                    //         bacon: action.ingredients.bacon,\n                    //         cheese: action.ingredients.cheese,\n                    //         meat: action.ingredients.meat\n                    //     },\n                    //     error: false\n                    // }\n\n\n                     case actionTypes.SET_INGREDIENT_FAILED:\n                         return setIngredientFailedHelper(state, action);\n                        // return {\n                        //     ...state,\n                        //     error: true\n                        // }\n        \n        default:\n            return state;\n\n}}\n\nexport default reducer;","import * as actionTypes from '../actions/actionTypes';\nimport {updateObject} from '../utility';\nconst initialState = {\n    orders: [],\n    loading:false,\n    purchased: false\n}\nconst purchaseBurgerStartHelper = (state,action) => {\n    return updateObject(state,{\n        loading:true\n    })\n}\n\nconst purchaseBurgerInitHelper = (state,action) => {\n    return updateObject(state,{\n        purchased:false\n    })\n}\n\nconst purchaseBurgerSuccessHelper = (state,action) => {\n    const newOrder = updateObject(action.orderData,{\n        id:action.orderId\n    })\n    return updateObject(state,{\n        \n        orders: action.orders.concat(newOrder),\n        purchased: true,\n        price:4\n    });\n}\n\nconst purchaseBurgerFailedHelper = (state,action) => {\n    return updateObject(state,{\n                \n        loading: false\n    })   \n}\n\nconst fetchOrderStartHelper = (state,action) => {\n    return updateObject(state,{\n                    \n        loading: true\n    });\n}\n\nconst fetchOrderSuccessHelper = (state,action) => {\n    return updateObject(state,{\n                        \n        orders: action.orders,\n        loading: false\n    })\n\n}\n\nconst fetchOrderFailedHelper = (state,action) => {\n    console.log(state);\n    console.log(action);\n    return updateObject(state,{\n                            \n        loading: false\n    })\n}\n\n\nconst reducer = (state = initialState,action) => {\nswitch (action.type) {\n    case actionTypes.PURCHASE_BURGER_START:\n        return purchaseBurgerStartHelper(state,action)\n        // return {\n        //     ...state,\n        //     loading:true\n        // }\n        case actionTypes.PURCHAGE_INIT:\n            return purchaseBurgerInitHelper(state,action);\n            // return {\n            //     ...state,\n            //     purchased:false\n            // }\n    case actionTypes.PURCHASE_BURGER_SUCCESS:return purchaseBurgerSuccessHelper(state,action);\n        \n        // const newOrder = {\n        //     ...action.orderData,\n        //     id:action.orderId\n        // }\n        // return {\n        //     ...state,\n        //     orders: action.orders.concat(newOrder),\n        //     purchased: true,\n        //     price:4\n        // };\n        case actionTypes.PURCHASE_BURGER_FAILED:\n            return purchaseBurgerFailedHelper(state,action)\n\n            case actionTypes.FETCH_ORDERS_START:\n                return fetchOrderStartHelper(state,action);\n\n                case actionTypes.FETCH_ORDERS_SUCCESS:\n                    return fetchOrderSuccessHelper(state,action);\n\n                    case actionTypes.FETCH_ORDERS_FAIL:\n                        return fetchOrderFailedHelper(state,action);\n    default:\n        return state;\n}\n}\n\nexport default reducer;","import * as actionTypes from '../actions/actionTypes';\nimport {updateObject} from '../utility';\nconst initialState = {\n    token: null,\n    userId: null,\n    error: null,\n    loading: false\n};\n\n\nconst authStart = (state, action) => {\nreturn updateObject(state, {error:null, loading:true});\n}\n\nconst authSuccess = (state,action) => {\n    console.log(action);\n    return updateObject(state, {error:null, loading:false, token: action.idToken,userId: action.userId});\n}\n\nconst authFail = (state,action) => {\n    return updateObject(state, {error:action.error, loading:false});\n}\n\nconst reducer = (state=initialState, action) => {\n    switch (action.type) {\n        case actionTypes.AUTH_START:return authStart(state,action);\n            case actionTypes.AUTH_SUCCESS:return authSuccess(state,action);\n                case actionTypes.AUTH_FAIL:return authFail(state,action);\n            case actionTypes.AUTH_LOGOUT: return authLogout(state, action);\n    \n        default:\n            return state;\n    }\n\n}\n\nconst authLogout = (state, action) => {\n    return updateObject(state, {state,   token: null, userId: null})\n}\n\nexport default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter} from 'react-router-dom';\nimport {Provider} from 'react-redux';\nimport thunk from 'redux-thunk';\nimport { createStore , compose, applyMiddleware, combineReducers} from 'redux';\nimport burgerBuilderReducer from './store/reducers/burgerBuilder';\nimport orderReducer from './store/reducers/order';\nimport authReducer from './store/reducers/auth';\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst rootReducer = combineReducers({\n    burgerBuilder: burgerBuilderReducer,\n    order: orderReducer,\n    auth: authReducer\n})\n\nconst store =  createStore(rootReducer,composeEnhancers(applyMiddleware(thunk)))\n\nconst app = (\n    <Provider store={store}>\n\n<BrowserRouter  basename='/'>\n    <App/>\n    </BrowserRouter>\n    </Provider>\n)\n\nReactDOM.render(app, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}